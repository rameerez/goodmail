# frozen_string_literal: true
require "erb"

module Goodmail
  # Handles rendering the final HTML email by injecting
  # the built content into the main layout template.
  module Layout
    extend self

    # Path to the default layout template within the gem
    DEFAULT_LAYOUT_PATH = File.expand_path("layout.erb", __dir__)

    # Renders the email content within the layout template.
    #
    # @param body_html [String] The HTML content generated by the Builder.
    # @param subject [String] The email subject line (used for the <title> tag).
    # @param layout_path [String, nil] Optional path to a custom layout ERB file.
    #                                   Defaults to the built-in layout.erb.
    # @return [String] The full HTML document string.
    def render(body_html, subject, layout_path: nil)
      template_path = layout_path || DEFAULT_LAYOUT_PATH

      unless File.exist?(template_path)
        raise Goodmail::Error, "Layout template not found at #{template_path}"
      end

      template_content = File.read(template_path)

      # Use ERB#result_with_hash for cleaner variable passing (Ruby 2.5+)
      ERB.new(template_content).result_with_hash(
        body_html: body_html,
        subject:   subject || "", # Ensure subject is not nil
        config:    Goodmail.config # Make config available to the layout
      )
    rescue => e
      raise Goodmail::Error, "Failed to render layout template: #{e.message}"
    end
  end
end
